{"version":3,"sources":["@jumbo/components/Common/formElements/AppDatePicker.js","routes/Pages/Reports/Table/UserListRow/index.js","routes/Pages/Reports/Table/UserTableHead/index.js","routes/Pages/Reports/Table/UserTableToolbar/index.style.js","routes/Pages/Reports/Table/UserTableToolbar/index.js","routes/Pages/Reports/Table/index.style.js","routes/Pages/Reports/Table/NoRecordFound.js","routes/Pages/Reports/Table/AddEdit/index.js","routes/Pages/Reports/Table/index.js","routes/Pages/Reports/ProjectWorkedHours/index.js"],"names":["AppDatePicker","name","id","fullWidth","size","value","onChange","helperText","variant","format","inputVariant","error","rest","KeyboardButtonProps","className","prototype","PropTypes","string","bool","func","defaultProps","useStyles","makeStyles","theme","titleRoot","marginBottom","fontSize","letterSpacing","color","palette","common","dark","tableCell","padding","React","memo","row","isSelected","classes","onRowClick","onUserEdit","onUserDelete","onUserView","dispatch","useDispatch","labelId","isItemSelected","TableRow","hover","role","aria-checked","tabIndex","key","selected","tableRow","TableCell","component","scope","Box","display","alignItems","Typography","String","order_no","toUpperCase","isPaid","order_status","toLowerCase","align","Number","amount_due","toFixed","recordedAt","onClick","event","stopPropagation","IconButton","val","type","UPDATE_CART","payload","cart_items","order_items","SET_ACTIVE_OPTION","SET_ACTION","SET_DRAWER_OPEN","headCellsOrders","numeric","disablePadding","label","headCellsExpenses","header","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","useState","headerCells","setHeaderCells","useEffect","TableHead","map","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","root","paddingLeft","spacing","paddingRight","minHeight","paddingTop","paddingBottom","highlight","secondary","main","backgroundColor","alpha","light","text","primary","title","flex","chipsRoot","justifyContent","marginLeft","marginRight","margin","setSelected","onAdd","searchTerm","filterOptions","setFilterOptions","setSearchTerm","project","handleSearch","openConfirmDialog","setOpenConfirmDialog","length","Fragment","Toolbar","clsx","width","Button","AddCircle","onSubmit","CmtSearch","e","target","border","Tooltip","aria-label","ConfirmDialog","open","content","onClose","onConfirm","deleteBulkUsers","fontWeight","paper","lighten","background","container","table","minWidth","clip","height","overflow","position","top","flexDirection","emptyTitle","disabled","typography","fontWeightBold","breakpoints","up","NoRecordFound","children","mb","xs","lg","CmtImage","src","alt","dialogRoot","dialogTitleRoot","AddEditUser","data","expenseDialog","useSelector","state","uiReducer","dpUrl","setDpUrl","values","setValues","errors","setErrors","handleChange","prop","useDropzone","accept","onDrop","acceptedFiles","formData","FormData","append","uploadFile","then","a","url","catch","err","console","log","getRootProps","getInputProps","onUserSave","phoneNumbers","Dialog","SET_STORE_DIALOG","setCurrentUser","DialogTitle","DialogContent","dividers","md","mr","CmtAvatar","commonData","staticUrl","GridContainer","Grid","item","sm","AppTextInput","address","SET_EXPENSE_DIALOG","ml","contacts","filter","number","trim","email","isValidEmail","requiredMessage","UsersModule","startDate","endDate","users","usersReducer","expenses","dataReducer","orderApp","orders","filterType","count","tableData","setTableData","setOrderBy","setOrder","setPage","rowsPerPage","setRowsPerPage","current","selectedUser","setSelectedUser","usersFetched","isFilterApplied","handleRowClick","selectedIndex","indexOf","newSelected","concat","slice","handleUserView","user","handleUserEdit","SET_USER_DIALOG","handleUserDelete","getOrders","page","AddEdit","Paper","preventDefault","setFilterType","searchText","TableContainer","Table","stickyHeader","aria-labelledby","checked","n","isAsc","TableBody","stableSort","getComparator","index","style","colSpan","rowSpan","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","deleteUser","headerItem","down","white","borderLeft","backdropContent","borderBottomColor","subHeaderBottom","breadcrumbs","link","ProjectSwitcher","currentProject","setCurrentProject","setStartDate","setEndDate","CmtCardContent","AppSelectBox","classicWidget","projects","valueKey","labelKey","find","ProjectHeader","revealed","mx","getFormattedDate","ProjectWorkedHours","moment","setRevealed","handleDateRange","start","end","PageContainer","heading","CmtBackDrop","concealedIcon","extrasContainer","alert","backLayerConcealed","backLayerRevealed","onRevealed","status","subHeader"],"mappings":"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","file":"static/js/7.2aeed892.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nconst AppDatePicker = ({\r\n  name,\r\n  id,\r\n  fullWidth,\r\n  size,\r\n  value,\r\n  onChange,\r\n  helperText,\r\n  variant,\r\n  format,\r\n  inputVariant,\r\n  error,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <KeyboardDatePicker\r\n      variant={variant}\r\n      inputVariant={inputVariant}\r\n      format={format}\r\n      name={name}\r\n      id={id || name}\r\n      fullWidth={fullWidth}\r\n      size={size}\r\n      value={value}\r\n      onChange={onChange}\r\n      helperText={helperText}\r\n      error={error || helperText !== ''}\r\n      KeyboardButtonProps={{\r\n        'aria-label': 'change date',\r\n      }}\r\n      {...rest}\r\n      className=\"form-control\"\r\n    />\r\n  );\r\n};\r\n\r\nAppDatePicker.prototype = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  fullWidth: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  format: PropTypes.string,\r\n  inputVariant: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  helperText: PropTypes.bool,\r\n};\r\n\r\nAppDatePicker.defaultProps = {\r\n  fullWidth: true,\r\n  variant: 'dialog',\r\n  inputVariant: 'standard',\r\n  format: 'YYYY-MM-DD',\r\n  size: 'small',\r\n  error: false,\r\n  helperText: '',\r\n};\r\n\r\nexport default AppDatePicker;\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { timeFromNow } from '../../../../../@jumbo/utils/dateHelper';\r\nimport { Block, CheckCircleOutline, Delete, Edit, MoreHoriz, Visibility } from '@material-ui/icons';\r\nimport CmtDropdownMenu from '../../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { Box, IconButton, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { sentMailToUser, updateUserStatus } from '../../../../../redux/actions/Users';\r\n\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { SET_ACTION, SET_ACTIVE_OPTION, SET_DRAWER_OPEN, UPDATE_CART } from 'redux/actions/types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  titleRoot: {\r\n    marginBottom: 2,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    color: theme.palette.common.dark,\r\n  },\r\n  tableCell: {\r\n    padding: 1\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst UserListRow = ({ row, isSelected, onRowClick, onUserEdit, onUserDelete, onUserView }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const getUserActions = user => {\r\n    const actions = [\r\n      { action: 'view', label: 'View', icon: <Visibility /> },\r\n      { action: 'edit', label: 'Edit', icon: <Edit /> },\r\n      // { action: 'email', label: 'Email', icon: <Mail /> },\r\n    ];\r\n if(row.roles && !row.roles.find(a => a.name === 'super')){\r\n  if (user.status === 'suspended') {\r\n    actions.push({\r\n      action: 'activate',\r\n      label: 'Reactivate',\r\n      icon: <CheckCircleOutline />,\r\n    });\r\n  } else {\r\n    actions.push({ action: 'suspend', label: 'Suspend', icon: <Block /> });\r\n  }\r\n  actions.push({ action: 'delete', label: 'Delete', icon: <Delete /> });\r\n\r\n }\r\n   \r\n  \r\n    return actions;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleClick = (val) => {\r\n      dispatch({type: UPDATE_CART, payload: {...val, cart_items: val.order_items}}); \r\n      dispatch({type: SET_ACTIVE_OPTION, payload: 'cart'});\r\n      dispatch({type: SET_ACTION, payload: val.isPaid ? 'paidCart' : 'viewCart'});\r\n      dispatch({type: SET_DRAWER_OPEN, payload: true});\r\n  }\r\n\r\n\r\n\r\n  const labelId = `enhanced-table-checkbox-${row.id}`;\r\n  const isItemSelected = isSelected(row.id);\r\n  return (\r\n    <TableRow\r\n      hover\r\n      // onClick={event => handleClick(row)}\r\n      role=\"checkbox\"\r\n      aria-checked={isItemSelected}\r\n      tabIndex={-1}\r\n      key={row.id}\r\n      selected={isItemSelected}\r\n      className={classes.tableRow}\r\n      >\r\n      <TableCell \r\n      className={classes.tableCell}\r\n      // padding=\"checkbox\"\r\n      >\r\n      </TableCell>\r\n      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\"\r\n        className={classes.tableCell}\r\n      >\r\n        <Box  display=\"flex\" alignItems=\"center\">\r\n          <div>\r\n            <Typography className={classes.titleRoot} component=\"div\" variant=\"h4\">\r\n              {String(row.order_no).toUpperCase()}\r\n            </Typography>\r\n\r\n            <Box color={row.isPaid ? 'success.main' :  String(row.order_status).toLowerCase() === 'unpaid' ? 'primary.main' : 'secondary.main' }>\r\n            <Typography component=\"span\" variant=\"h6\" \r\n            // color={(String(row.order_status).toLowerCase() === 'paid' || row.isPaid) ? 'primary' : String(row.order_status).toLowerCase() === 'unpaid' ? 'secondary' :  'textPrimary'}\r\n            \r\n            >\r\n            \r\n              {(String(row.order_status).toLowerCase() === 'paid' || row.isPaid) ? 'PAID' : String(row.order_status).toUpperCase()}\r\n            </Typography>\r\n            </Box>\r\n          </div>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell\r\n        className={classes.tableCell}\r\n        align=\"center\"\r\n      >₱{Number(row.amount_due).toFixed(2)}</TableCell>\r\n       <TableCell\r\n        align=\"center\"\r\n        className={classes.tableCell}\r\n       >\r\n        {row.recordedAt}\r\n      </TableCell> \r\n      {/* <TableCell>{timeFromNow(row.lastLoginAt)}</TableCell> */}\r\n      <TableCell align=\"center\" onClick={event => event.stopPropagation()}\r\n         className={classes.tableCell}\r\n      >\r\n        <IconButton onClick={() => handleClick(row)}>\r\n          <LaunchIcon color='primary'/>\r\n        </IconButton>\r\n  {/* <CmtDropdownMenu items={userActions} onItemClick={(e) => onUserMenuClick(e)} TriggerComponent={<MoreHoriz />} /> */}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default React.memo(UserListRow);\r\n","import TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst headCellsOrders = [\r\n  {\r\n    id: 'order_no',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'ORDER #',\r\n  },\r\n  { id: 'amount_due', numeric: true, disablePadding: false, label: 'TOTAL' },\r\n  { id:   'recordedAt', numeric: true, disablePadding: false, label: 'DATE' },\r\n  //  {\r\n  //   id: 'lastLoginAt',\r\n  //   numeric: false,\r\n  //   disablePadding: false,\r\n  //   label: 'Last Login',\r\n  // },\r\n];\r\n\r\nconst headCellsExpenses = [\r\n  {\r\n    id: 'ref_no',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Ref #',\r\n  },\r\n  {\r\n    id: 'description',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Description',\r\n  },\r\n  { id: 'amount', numeric: false, disablePadding: true, label: 'TOTAL' },\r\n  { id:   'recordedAt', numeric: false, disablePadding: true, label: 'DATE' },\r\n];\r\n\r\n\r\n\r\nfunction UserTableHead({ classes, header, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort }) {\r\n  const [headerCells, setHeaderCells] = useState([]);\r\n \r\n  const onSortOrderChange = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n      if(header === 'expenses'){\r\n        setHeaderCells(headCellsExpenses)\r\n      } else {\r\n        setHeaderCells(headCellsOrders)\r\n      }\r\n  }, [header])\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell \r\n           className={classes.tableCell}\r\n        >\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          /> */}\r\n        </TableCell>\r\n        {headerCells.map(headCell => (\r\n          <TableCell\r\n          className={classes.tableCell}\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'center' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}>\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={onSortOrderChange(headCell.id)}>\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell align=\"center\"\r\n         className={classes.tableCell}\r\n        ></TableCell> \r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nUserTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default React.memo(UserTableHead);\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(2),\r\n    minHeight: 0,\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: alpha(theme.palette.secondary.light, 0.15),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n  chipsRoot: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginLeft: theme.spacing(0.5),\r\n    marginRight: theme.spacing(0.5),\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, Chip, Menu, MenuItem } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteBulkUsers } from '../../../../../redux/actions/Users';\r\nimport ConfirmDialog from '../../../../../@jumbo/components/Common/ConfirmDialog';\r\nimport CmtSearch from '../../../../../@coremat/CmtSearch';\r\nimport useStyles from './index.style';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { AddCircle } from '@material-ui/icons';\r\n\r\nconst filterOptionsList = [\r\n  { label: 'Active', value: 'active' },\r\n  { label: 'Suspended', value: 'suspended' },\r\n];\r\n\r\nconst UserTableToolbar = ({\r\n  selected,\r\n  setSelected,\r\n  onAdd,\r\n  filterOptions,\r\n  setFilterOptions,\r\n  searchTerm,\r\n  setSearchTerm,\r\n  project,\r\n  handleSearch\r\n}) => {\r\n  const classes = useStyles();\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const onDeleteCLick = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n    dispatch(deleteBulkUsers(selected, () => setSelected([])));\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  // const onFilterOptionClick = option => {\r\n  //   setFilterOptions(prevState => {\r\n  //     if (prevState.includes(option.value)) {\r\n  //       return prevState.filter(item => item !== option.value);\r\n  //     } else {\r\n  //       return [...prevState, option.value];\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  const onChipDelete = option => {\r\n    setFilterOptions(filterOptions.filter(item => item !== option.value));\r\n  };\r\n\r\n  const onSearchChipDelete = () => setSearchTerm('');\r\n\r\n  const numSelected = selected.length;\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}>\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                      {project.value === 'expenses' && \r\n            <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => onAdd()}>\r\n             <AddCircle/>&nbsp;Add\r\n            </Button>\r\n             }\r\n\r\n          <Box component=\"form\" onSubmit={handleSearch} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\" width=\"100%\">\r\n          <CmtSearch \r\n          onChange={e => setSearchTerm(e.target.value)}\r\n           value={searchTerm} border={false}  />\r\n          \r\n            </Box>\r\n          </Box>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\" onClick={onDeleteCLick}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <React.Fragment>\r\n                {/* <Box component=\"form\" onSubmit={handleSearch} style={{display: 'flex'}}>\r\n            <CmtSearch onChange={e => setSearchTerm(e.target.value)} value={searchTerm} border={false} onlyIcon />\r\n            <div className={classes.chipsRoot}>\r\n              {searchTerm && <Chip label={searchTerm} onDelete={onSearchChipDelete} />}\r\n              {filterOptionsList.map(\r\n                (option, index) =>\r\n                  filterOptions.includes(option.value) && (\r\n                    <Chip key={index} label={option.label} onDelete={() => onChipDelete(option)} />\r\n                  ),\r\n              )}\r\n            </div>\r\n            </Box> */}\r\n\r\n            {/* <Tooltip title=\"Filter list\">\r\n              <IconButton aria-label=\"filter list\" onClick={handleClick}>\r\n                <FilterListIcon />\r\n              </IconButton>\r\n            </Tooltip> */}\r\n            {/* <Menu\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              anchorEl={anchorEl}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}>\r\n              {filterOptionsList.map((option, index) => (\r\n                <MenuItem key={index} onClick={() => onFilterOptionClick(option)}>\r\n                  <Checkbox\r\n                    checked={filterOptions.includes(option.value)}\r\n                    inputProps={{ 'aria-labelledby': option.label }}\r\n                  />\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu> */}\r\n          </React.Fragment>\r\n        )}\r\n      </Toolbar>\r\n\r\n      <ConfirmDialog\r\n        open={openConfirmDialog}\r\n        title={`Confirm delete users`}\r\n        content={'Are you sure, you want to  delete selected users?'}\r\n        onClose={handleCancelDelete}\r\n        onConfirm={handleConfirmDelete}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nUserTableToolbar.propTypes = {\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  filterOptions: PropTypes.array,\r\n  setFilterOptions: PropTypes.func,\r\n  searchTerm: PropTypes.string,\r\n  setSearchTerm: PropTypes.func,\r\n  onUserAdd: PropTypes.func,\r\n};\r\n\r\nexport default React.memo(UserTableToolbar);\r\n","import { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  tableCell: {\r\n    padding: 2,\r\n    fontSize: '15px',\r\n    fontWeight: 'bold'\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(4),\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  container: {\r\n    // maxHeight: 415,\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n  },\r\n  emptyTitle: {\r\n    fontSize: 16,\r\n    color: theme.palette.text.disabled,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NoRecordFound = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box mb={{ xs: 4, lg: 6 }}>\r\n        <CmtImage src={'/images/icons/search-contact.png'} alt=\"Empty contacts\" />\r\n      </Box>\r\n      <p className={classes.emptyTitle}>{children}</p>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NoRecordFound;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Box from '@material-ui/core/Box';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppTextInput from '../../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Button from '@material-ui/core/Button';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\r\nimport { requiredMessage } from '../../../../../@jumbo/constants/ErrorMessages';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { DialogTitle, TextField, InputAdornment } from '@material-ui/core';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { isValidEmail } from '../../../../../@jumbo/utils/commonHelper';\r\n\r\n//Icons\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport commonData from 'utils/commonData';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewUser, setCurrentUser, updateUser, uploadFile } from '../../../../../redux/actions/Users';\r\nimport { SET_USER_DIALOG, SET_STORE_DIALOG, SET_EXPENSE_DIALOG } from 'redux/actions/types';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialogRoot: {\r\n    position: 'relative',\r\n  },\r\n  dialogTitleRoot: {\r\n    '& .MuiTypography-h6': {\r\n      fontSize: 16,\r\n      color: theme.palette.common.dark,\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst labels = [\r\n  { title: 'Home', slug: 'home' },\r\n  { title: 'Office', slug: 'office' },\r\n  { title: 'Other', slug: 'other' },\r\n];\r\n\r\nconst roles = [\r\n  { id: 3, name: 'sales' },\r\n  { id: 2, name: 'admin' },\r\n  { id: 1, name: 'super' },\r\n];\r\n\r\nconst AddEditUser = ({data}) => {\r\n  const classes = useStyles();\r\n  const { expenseDialog } = useSelector((state) => state.uiReducer);\r\n  const dispatch = useDispatch();\r\n  const [dpUrl, setDpUrl] = useState('');\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = prop => e => {\r\n    setValues({ ...values, [prop]: e.target.value });\r\n    setErrors({ ...errors, [prop]: '' });\r\n  };\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      const formData = new FormData();\r\n      formData.append('file', acceptedFiles[0]);\r\n\r\n      dispatch(uploadFile(formData))\r\n        .then(a => {\r\n          setDpUrl(a.url);\r\n          setValues({...values, dpUrl: a.url})\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n\r\n  \r\n\r\n  const onCloseDialog = () => {\r\n    dispatch({type: SET_EXPENSE_DIALOG, payload: !expenseDialog});\r\n    dispatch(setCurrentUser(null));\r\n  };\r\n\r\n  const onClosesDialog = () => {\r\n    dispatch({type: SET_STORE_DIALOG, payload: false});\r\n    dispatch(setCurrentUser(null));\r\n  };\r\n\r\n\r\n\r\n  const onSubmitClick = () => {\r\n    const phoneNumbers = values.contacts.filter(item => item.number.trim());\r\n    if (!values.name) {\r\n      setErrors({ ...errors, name: requiredMessage });\r\n    } else if (!values.email) {\r\n      setErrors({ ...errors, email: requiredMessage });\r\n    } else if (!isValidEmail(values.email)) {\r\n      setErrors({ ...errors, email: 'Invalid Email Address' });\r\n    } \r\n    // else if (phoneNumbers.length === 0) {\r\n    //   setPhoneError(requiredMessage);\r\n    // } \r\n    else {\r\n      onUserSave(phoneNumbers);\r\n    }\r\n  };\r\n\r\n  const onUserSave = phoneNumbers => {\r\n \r\n  };\r\n\r\n  return (\r\n    <Dialog open={expenseDialog ? true : false} onClose={onClosesDialog} className={classes.dialogRoot}>\r\n      <DialogTitle className={classes.dialogTitleRoot}>{data.id ? 'Edit Details' : 'Create New Record'}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection={{ xs: 'column', md: 'row' }} alignItems=\"center\" mb={{ xs: 6, md: 5 }}>\r\n          <Box {...getRootProps()} mr={{ xs: 0, md: 5 }} mb={{ xs: 3, md: 0 }} className=\"pointer\">\r\n            <input {...getInputProps()} />\r\n            <CmtAvatar size={70} src={`${commonData.staticUrl}${dpUrl}`} />\r\n          </Box>\r\n          <GridContainer>\r\n            <Grid item xs={12} sm={12}>\r\n              <AppTextInput\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Full Name\"\r\n                value={values.name}\r\n                onChange={handleChange('name')}\r\n                helperText={errors.name}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </Box>\r\n        <Box mb={{ xs: 6, md: 5 }}>\r\n          <AppTextInput\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Complete Address\"\r\n            value={values.address}\r\n            onChange={handleChange('address')}\r\n            helperText={errors.address}\r\n          />\r\n        </Box>\r\n     \r\n        <Box display=\"flex\" justifyContent=\"flex-end\" mb={4}>\r\n          <Button onClick={onCloseDialog}>Cancel</Button>\r\n          <Box ml={2}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmitClick}>\r\n              {data.id ? 'Void' : 'Save'}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddEditUser;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Paper, Table, TableCell, TableContainer, TableRow } from '@material-ui/core';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport UserListRow from './UserListRow';\r\nimport UserTableHead from './UserTableHead';\r\nimport UserTableToolbar from './UserTableToolbar';\r\nimport { getComparator, stableSort } from '../../../../@jumbo/utils/tableHelper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUser, getUsers, setCurrentUser } from '../../../../redux/actions/Users';\r\nimport ConfirmDialog from '../../../../@jumbo/components/Common/ConfirmDialog';\r\nimport { useDebounce } from '../../../../@jumbo/utils/commonHelper';\r\nimport useStyles from './index.style';\r\nimport NoRecordFound from './NoRecordFound';\r\nimport AddEdit from './AddEdit';\r\nimport { SET_EXPENSE_DIALOG, SET_USER_DIALOG } from 'redux/actions/types';\r\nimport { getOrders, setFilterType } from 'redux/actions/OrderApp';\r\n\r\nconst UsersModule = ({project, startDate, endDate}) => {\r\n  const classes = useStyles();\r\n  const { users } = useSelector((state) => state.usersReducer);\r\n  const { expenses } = useSelector(({dataReducer}) => dataReducer);\r\n  const { orders,  filterType, count } = useSelector(({orderApp}) => orderApp);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [current, setCurrent] = useState({});\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({ name: '' });\r\n  const [usersFetched, setUsersFetched] = useState(false);\r\n  const [isFilterApplied, setFilterApplied] = useState(false);\r\n  const [filterOptions, setFilterOptions] = React.useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrderBy(property);\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelected = users.map(n => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleRowClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n    dispatch(setFilterType({\r\n      ...filterType,\r\n      searchText: searchTerm,\r\n      page: newPage\r\n    }));\r\n    dispatch(getOrders({\r\n      ...filterType,\r\n      searchText: searchTerm,\r\n      page: newPage\r\n    }));\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n    dispatch(setFilterType({\r\n      ...filterType,\r\n      searchText: searchTerm,\r\n      page: 0,\r\n      rowsPerPage: parseInt(event.target.value, 10)\r\n    }));\r\n\r\n    dispatch(getOrders({\r\n      ...filterType,\r\n      searchText: searchTerm,\r\n      page: 0,\r\n      rowsPerPage: parseInt(event.target.value, 10)\r\n    }));\r\n\r\n  };\r\n\r\n  const handleUserView = user => {\r\n    dispatch(setCurrentUser(user));\r\n  };\r\n\r\n  const handleUserEdit = user => {\r\n    dispatch(setCurrentUser(user));\r\n    dispatch({type: SET_USER_DIALOG, payload: true})\r\n  };\r\n\r\n  const handleUserDelete = user => {\r\n    setSelectedUser(user);\r\n    setOpenConfirmDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n    dispatch(deleteUser(selectedUser.id));\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n  \r\n\r\n  const handleSearchTerm = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setFilterType({\r\n      ...filterType,\r\n      page: 0,\r\n      searchText: searchTerm\r\n    }));\r\n    dispatch(getOrders({\r\n      ...filterType,\r\n      page: 0,\r\n      searchText: searchTerm\r\n    }));\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders({\r\n      page: 0,\r\n      rowsPerPage: 10\r\n    }));\r\n  }, []);\r\n\r\n    useEffect(() => {\r\n      if(project.value === 'orders'){\r\n        setTableData(orders);\r\n      }\r\n\r\n      if(project.value === 'expenses'){\r\n        setTableData(expenses);\r\n      }\r\n    },[orders, project, expenses])\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AddEdit \r\n          data={current}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <UserTableToolbar\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          onAdd={(e) => \r\n            dispatch({type: SET_EXPENSE_DIALOG, payload: true})\r\n          }\r\n          filterOptions={filterOptions}\r\n          setFilterOptions={setFilterOptions}\r\n          searchTerm={searchTerm}\r\n          setSearchTerm={setSearchTerm}\r\n          project={project}\r\n          handleSearch={handleSearchTerm}\r\n        />\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader className={classes.table} aria-labelledby=\"tableTitle\" aria-label=\"sticky enhanced table\">\r\n            <UserTableHead\r\n              header={project.value}\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={tableData.length}\r\n            />\r\n            <TableBody>\r\n              {!!tableData.length ? (\r\n                stableSort(tableData, getComparator(order, orderBy))\r\n                  .map((row, index) => (\r\n                    <UserListRow\r\n                      key={index}\r\n                      row={row}\r\n                      onRowClick={handleRowClick}\r\n                      onUserEdit={handleUserEdit}\r\n                      onUserDelete={handleUserDelete}\r\n                      onUserView={handleUserView}\r\n                      isSelected={isSelected}\r\n                    />\r\n                  ))\r\n              ) : (\r\n                <TableRow style={{ height: 43 * 6 }}>\r\n                  <TableCell colSpan={7} rowSpan={10}>\r\n                    {isFilterApplied ? (\r\n                      <NoRecordFound>There are no records found with your filter.</NoRecordFound>\r\n                    ) : (\r\n                      <NoRecordFound>{usersFetched ? 'There are no records found.' : 'Loading users...'}</NoRecordFound>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50]}\r\n          component=\"div\"\r\n          count={count}\r\n          rowsPerPage={rowsPerPage}\r\n          page={filterType.page}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleRowsPerPageChange}\r\n        />\r\n      </Paper>\r\n\r\n\r\n      <ConfirmDialog\r\n        open={openConfirmDialog}\r\n        title={`Confirm delete ${selectedUser.name}`}\r\n        content={'Are you sure, you want to  delete this user?'}\r\n        onClose={handleCancelDelete}\r\n        onConfirm={handleConfirmDelete}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersModule;\r\n ","import React, { useState, useEffect } from 'react';\r\nimport CmtBackDrop from '../../../../@coremat/CmtBackDrop';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport Box from '@material-ui/core/Box';\r\nimport { classicWidget } from '../../../../@fake-db';\r\nimport AppDatePicker from '../../../../@jumbo/components/Common/formElements/AppDatePicker';\r\nimport ProjectWorkedGraph from './ProjectWorkedGraph';\r\nimport AppSelectBox from '../../../../@jumbo/components/Common/formElements/AppSelectBox';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { getFormattedDate } from '../../../../@jumbo/utils/dateHelper';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n//Components\r\nimport Table from '../Table';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrders, setFilterType} from 'redux/actions/OrderApp';\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingRight: 16,\r\n    paddingLeft: 16,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 13,\r\n      paddingLeft: 8,\r\n      paddingRight: 8,\r\n    },\r\n    color: alpha(theme.palette.common.white, 0.74),\r\n    '&:not(:first-child)': {\r\n      borderLeft: `1px solid ${alpha(theme.palette.common.white, 0.8)}`,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      marginRight: 12,\r\n    },\r\n  },\r\n  backdropContent: {\r\n    color: alpha(theme.palette.common.white, 0.74),\r\n    '& .form-control': {\r\n      marginBottom: 20,\r\n      '& label, & .MuiInput-formControl, & .MuiSelect-icon, & .MuiIconButton-root': {\r\n        color: alpha(theme.palette.common.white, 0.74),\r\n      },\r\n      '& .MuiInput-underline:before, & .MuiInput-underline:after': {\r\n        borderBottomColor: alpha(theme.palette.common.white, 0.74),\r\n      },\r\n    },\r\n  },\r\n  subHeaderBottom: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst breadcrumbs = [\r\n  { label: 'Dashboard', link: '/' },\r\n  { label: 'Reports', link: '/reports' },\r\n];\r\n\r\n\r\nconst ProjectSwitcher = ({ currentProject, setCurrentProject, startDate, setStartDate, endDate, setEndDate }) => {\r\n  \r\n  \r\n  const handleProjectChange = event => {\r\n\r\n    setCurrentProject(classicWidget.projects.find(project => project.value === event.target.value));\r\n  };\r\n\r\n  const onStartDateChange = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const onEndDateChange = date => {\r\n    setEndDate(date);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  \r\n  return (\r\n  \r\n    <CmtCardContent>\r\n      <Box className={classes.backdropContent}>\r\n        <AppSelectBox\r\n          label=\"Select Report Table\"\r\n          data={classicWidget.projects}\r\n          valueKey=\"value\"\r\n          labelKey=\"label\"\r\n          value={currentProject.value}\r\n          onChange={handleProjectChange}\r\n          // disabled={true}\r\n        />\r\n        <AppDatePicker label=\"Start Date\" value={startDate} onChange={setStartDate} />\r\n        <AppDatePicker label=\"End Date\" value={endDate} onChange={setEndDate} />\r\n      </Box>\r\n    </CmtCardContent>\r\n   \r\n  );\r\n};\r\n\r\nconst ProjectHeader = ({ revealed, startDate, endDate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\r\n      <Box className={classes.headerItem}>Reports</Box>\r\n      <Box className={classes.headerItem}>\r\n        <CalendarTodayIcon />\r\n        {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ProjectWorkedHours = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { orders,  filterType, count } = useSelector(({orderApp}) => orderApp);\r\n  const [currentProject, setCurrentProject] = React.useState(classicWidget.projects[0]);\r\n  const [startDate, setStartDate] = React.useState(moment().format('YYYY-MM-DD'));\r\n  const [endDate, setEndDate] = React.useState(moment().format('YYYY-MM-DD'));\r\n  const [revealed, setRevealed] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const handleOnRevealed = status => {\r\n    setRevealed(status);\r\n  };\r\n\r\n\r\n  const handleDateRange = prop => event => {\r\n    let start = startDate\r\n    let end = endDate\r\n\r\n    if(prop === 'startDate'){\r\n      start = moment(event).format('YYYY-MM-DD')\r\n      setStartDate(start)\r\n    } \r\n\r\n    if(prop === 'endDate'){\r\n      end = moment(event).format('YYYY-MM-DD')\r\n      setEndDate(end)\r\n    }\r\n\r\n    dispatch(setFilterType({\r\n      ...filterType,\r\n      page: 0,\r\n      startDate: start, \r\n      endDate: end\r\n    }));\r\n\r\n    dispatch(getOrders({\r\n      ...filterType,\r\n      startDate: start,\r\n      endDate: end\r\n    }))\r\n\r\n};\r\n  const handleProject = (e) => {\r\n    setCurrentProject(e)\r\n  }\r\n\r\n\r\n  const resetWidget = () => {\r\n    setCurrentProject(classicWidget.projects[0]);\r\n  };  \r\n\r\n  const handleReset = () => {\r\n    dispatch(getOrders({\r\n      page: 0,\r\n      rowsPerPage: 10\r\n    }))\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if(startDate  && endDate) dispatch(getOrders({\r\n  //     ...filterType,\r\n  //     startDate: startDate,\r\n  //     endDate: endDate\r\n  //   }))\r\n  // }, [startDate, endDate])\r\n\r\n\r\n  return (\r\n    <PageContainer heading=\"Sales Reports\" breadcrumbs={breadcrumbs}>\r\n    <GridContainer>\r\n      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n    <CmtBackDrop\r\n      concealedIcon={<DeveloperBoardIcon />}\r\n      extrasContainer={<Box >\r\n          <PrintIcon className=\"pointer\" \r\n      onClick={() => alert('PRINT')}/>&nbsp;&nbsp;&nbsp;\r\n      <RefreshIcon className=\"pointer\" \r\n      onClick={handleReset} />\r\n        </Box>}\r\n      backLayerConcealed={<ProjectHeader revealed currentProject={currentProject} startDate={startDate} endDate={endDate} />\r\n      }\r\n      backLayerRevealed={\r\n        <ProjectSwitcher\r\n          currentProject={currentProject}\r\n          setCurrentProject={handleProject}\r\n          startDate={startDate}\r\n          setStartDate={handleDateRange('startDate')}\r\n          endDate={endDate}\r\n          setEndDate={handleDateRange('endDate')}\r\n        />\r\n      }\r\n      onRevealed={handleOnRevealed}\r\n      subHeader={ <Box >\r\n      <Box>\r\n      <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\r\n          {currentProject.label}\r\n        </Typography>\r\n    </Box>\r\n      <Box className={classes.subHeaderBottom}>\r\n        <Box>\r\n          {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}\r\n        </Box>\r\n\r\n        <Box component=\"span\" fontSize={14} color=\"primary.main\">\r\n          \r\n        </Box>\r\n      </Box> \r\n    </Box>}\r\n      >\r\n     \r\n      <Box width=\"100%\">\r\n      <Table\r\n        project={currentProject}\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n      />\r\n      </Box>\r\n      {/* <ProjectWorkedGraph\r\n        data={currentProject.data}\r\n        color={currentProject.color}\r\n        backgroundColor={currentProject.backgroundColor}\r\n      /> */}\r\n    </CmtBackDrop>\r\n    </Grid>\r\n    </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectWorkedHours;\r\n"],"sourceRoot":""}