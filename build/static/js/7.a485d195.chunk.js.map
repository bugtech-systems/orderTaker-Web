{"version":3,"sources":["@jumbo/components/Common/formElements/AppDatePicker.js","routes/Pages/Reports/Table/UserListRow/index.js","routes/Pages/Reports/Table/UserTableHead/index.js","routes/Pages/Reports/Table/UserTableToolbar/index.style.js","routes/Pages/Reports/Table/UserTableToolbar/index.js","routes/Pages/Reports/Table/index.style.js","routes/Pages/Reports/Table/NoRecordFound.js","routes/Pages/Reports/Table/AddEdit/index.js","routes/Pages/Reports/Table/index.js","routes/Pages/Reports/ProjectWorkedHours/index.js"],"names":["AppDatePicker","_ref","name","id","fullWidth","size","value","onChange","helperText","variant","format","inputVariant","error","rest","_objectWithoutProperties","_excluded","React","createElement","KeyboardDatePicker","Object","assign","KeyboardButtonProps","className","prototype","PropTypes","string","bool","func","defaultProps","useStyles","makeStyles","theme","titleRoot","marginBottom","fontSize","letterSpacing","color","palette","common","dark","tableCell","padding","memo","row","isSelected","classes","onRowClick","onUserEdit","onUserDelete","onUserView","dispatch","useDispatch","labelId","concat","isItemSelected","TableRow","hover","role","aria-checked","tabIndex","key","selected","tableRow","TableCell","component","scope","Box","display","alignItems","Typography","String","order_no","toUpperCase","isPaid","order_status","toLowerCase","align","Number","amount_due","toFixed","recordedAt","onClick","event","stopPropagation","IconButton","val","type","UPDATE_CART","payload","_objectSpread","cart_items","order_items","SET_ACTIVE_OPTION","SET_ACTION","SET_DRAWER_OPEN","LaunchIcon","headCellsOrders","numeric","disablePadding","label","headCellsExpenses","header","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","_useState","useState","_useState2","_slicedToArray","headerCells","setHeaderCells","useEffect","TableHead","map","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","root","paddingLeft","spacing","paddingRight","minHeight","paddingTop","paddingBottom","highlight","secondary","main","backgroundColor","alpha","light","text","primary","title","flex","chipsRoot","justifyContent","marginLeft","marginRight","margin","setSelected","onAdd","searchTerm","filterOptions","setFilterOptions","setSearchTerm","project","handleSearch","openConfirmDialog","setOpenConfirmDialog","_React$useState","_React$useState2","length","Fragment","Toolbar","clsx","_defineProperty","width","Button","AddCircle","onSubmit","CmtSearch","e","target","border","Tooltip","aria-label","DeleteIcon","ConfirmDialog","open","content","onClose","onConfirm","deleteBulkUsers","fontWeight","paper","lighten","background","container","table","minWidth","clip","height","overflow","position","top","flexDirection","emptyTitle","disabled","typography","fontWeightBold","breakpoints","up","NoRecordFound","children","mb","xs","lg","CmtImage","src","alt","dialogRoot","dialogTitleRoot","AddEditUser","data","expenseDialog","useSelector","state","uiReducer","dpUrl","setDpUrl","_useState3","_useState4","values","setValues","_useState5","_useState6","errors","setErrors","handleChange","prop","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","formData","FormData","append","uploadFile","then","a","url","catch","err","console","log","getRootProps","getInputProps","onUserSave","phoneNumbers","Dialog","SET_STORE_DIALOG","setCurrentUser","DialogTitle","DialogContent","dividers","md","mr","CmtAvatar","commonData","staticUrl","GridContainer","Grid","item","sm","AppTextInput","address","SET_EXPENSE_DIALOG","ml","contacts","filter","number","trim","email","isValidEmail","requiredMessage","UsersModule","startDate","endDate","users","usersReducer","expenses","_ref2","dataReducer","_useSelector3","_ref3","orderApp","orders","filterType","count","tableData","setTableData","setOrderBy","_React$useState3","_React$useState4","setOrder","_React$useState5","_React$useState6","setPage","_React$useState7","_React$useState8","rowsPerPage","setRowsPerPage","_React$useState9","_React$useState10","current","_useState7","_useState8","_useState9","_useState10","selectedUser","setSelectedUser","_useState11","_useState12","usersFetched","_useState13","_useState14","isFilterApplied","_React$useState11","_React$useState12","_useState15","_useState16","handleRowClick","selectedIndex","indexOf","newSelected","slice","handleUserView","user","handleUserEdit","SET_USER_DIALOG","handleUserDelete","getOrders","page","AddEdit","Paper","UserTableToolbar","preventDefault","setFilterType","searchText","TableContainer","Table","stickyHeader","aria-labelledby","UserTableHead","checked","n","isAsc","TableBody","stableSort","getComparator","index","UserListRow","style","colSpan","rowSpan","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","deleteUser","_headerItem","headerItem","down","white","borderLeft","backdropContent","borderBottomColor","subHeaderBottom","breadcrumbs","link","ProjectSwitcher","currentProject","setCurrentProject","setStartDate","setEndDate","CmtCardContent","AppSelectBox","classicWidget","projects","valueKey","labelKey","find","ProjectHeader","revealed","mx","CalendarTodayIcon","getFormattedDate","ProjectWorkedHours","_useSelector","moment","setRevealed","handleDateRange","start","end","PageContainer","heading","CmtBackDrop","concealedIcon","DeveloperBoardIcon","extrasContainer","PrintIcon","alert","RefreshIcon","backLayerConcealed","backLayerRevealed","onRevealed","status","subHeader"],"mappings":"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","file":"static/js/7.a485d195.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\nconst AppDatePicker = ({\n  name,\n  id,\n  fullWidth,\n  size,\n  value,\n  onChange,\n  helperText,\n  variant,\n  format,\n  inputVariant,\n  error,\n  ...rest\n}) => {\n  return (\n    <KeyboardDatePicker\n      variant={variant}\n      inputVariant={inputVariant}\n      format={format}\n      name={name}\n      id={id || name}\n      fullWidth={fullWidth}\n      size={size}\n      value={value}\n      onChange={onChange}\n      helperText={helperText}\n      error={error || helperText !== ''}\n      KeyboardButtonProps={{\n        'aria-label': 'change date',\n      }}\n      {...rest}\n      className=\"form-control\"\n    />\n  );\n};\n\nAppDatePicker.prototype = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  value: PropTypes.string,\n  variant: PropTypes.string,\n  format: PropTypes.string,\n  inputVariant: PropTypes.string,\n  size: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.bool,\n  helperText: PropTypes.bool,\n};\n\nAppDatePicker.defaultProps = {\n  fullWidth: true,\n  variant: 'dialog',\n  inputVariant: 'standard',\n  format: 'YYYY-MM-DD',\n  size: 'small',\n  error: false,\n  helperText: '',\n};\n\nexport default AppDatePicker;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableRow from '@material-ui/core/TableRow';\nimport { timeFromNow } from '../../../../../@jumbo/utils/dateHelper';\nimport { Block, CheckCircleOutline, Delete, Edit, MoreHoriz, Visibility } from '@material-ui/icons';\nimport CmtDropdownMenu from '../../../../../@coremat/CmtDropdownMenu';\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\nimport { Box, IconButton, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { sentMailToUser, updateUserStatus } from '../../../../../redux/actions/Users';\n\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { SET_ACTION, SET_ACTIVE_OPTION, SET_DRAWER_OPEN, UPDATE_CART } from 'redux/actions/types';\n\nconst useStyles = makeStyles(theme => ({\n  titleRoot: {\n    marginBottom: 2,\n    fontSize: 14,\n    letterSpacing: 0.25,\n    color: theme.palette.common.dark,\n  },\n  tableCell: {\n    padding: 1\n  }\n}));\n\n\n\nconst UserListRow = ({ row, isSelected, onRowClick, onUserEdit, onUserDelete, onUserView }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n\n  const getUserActions = user => {\n    const actions = [\n      { action: 'view', label: 'View', icon: <Visibility /> },\n      { action: 'edit', label: 'Edit', icon: <Edit /> },\n      // { action: 'email', label: 'Email', icon: <Mail /> },\n    ];\n if(row.roles && !row.roles.find(a => a.name === 'super')){\n  if (user.status === 'suspended') {\n    actions.push({\n      action: 'activate',\n      label: 'Reactivate',\n      icon: <CheckCircleOutline />,\n    });\n  } else {\n    actions.push({ action: 'suspend', label: 'Suspend', icon: <Block /> });\n  }\n  actions.push({ action: 'delete', label: 'Delete', icon: <Delete /> });\n\n }\n   \n  \n    return actions;\n  };\n\n\n\n\n\n  const handleClick = (val) => {\n      dispatch({type: UPDATE_CART, payload: {...val, cart_items: val.order_items}}); \n      dispatch({type: SET_ACTIVE_OPTION, payload: 'cart'});\n      dispatch({type: SET_ACTION, payload: val.isPaid ? 'paidCart' : 'viewCart'});\n      dispatch({type: SET_DRAWER_OPEN, payload: true});\n  }\n\n\n\n  const labelId = `enhanced-table-checkbox-${row.id}`;\n  const isItemSelected = isSelected(row.id);\n  return (\n    <TableRow\n      hover\n      // onClick={event => handleClick(row)}\n      role=\"checkbox\"\n      aria-checked={isItemSelected}\n      tabIndex={-1}\n      key={row.id}\n      selected={isItemSelected}\n      className={classes.tableRow}\n      >\n      <TableCell \n      className={classes.tableCell}\n      // padding=\"checkbox\"\n      >\n      </TableCell>\n      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\"\n        className={classes.tableCell}\n      >\n        <Box  display=\"flex\" alignItems=\"center\">\n          <div>\n            <Typography className={classes.titleRoot} component=\"div\" variant=\"h4\">\n              {String(row.order_no).toUpperCase()}\n            </Typography>\n\n            <Box color={row.isPaid ? 'success.main' :  String(row.order_status).toLowerCase() === 'unpaid' ? 'primary.main' : 'secondary.main' }>\n            <Typography component=\"span\" variant=\"h6\" \n            // color={(String(row.order_status).toLowerCase() === 'paid' || row.isPaid) ? 'primary' : String(row.order_status).toLowerCase() === 'unpaid' ? 'secondary' :  'textPrimary'}\n            \n            >\n            \n              {(String(row.order_status).toLowerCase() === 'paid' || row.isPaid) ? 'PAID' : String(row.order_status).toUpperCase()}\n            </Typography>\n            </Box>\n          </div>\n        </Box>\n      </TableCell>\n      <TableCell\n        className={classes.tableCell}\n        align=\"center\"\n      >₱{Number(row.amount_due).toFixed(2)}</TableCell>\n       <TableCell\n        align=\"center\"\n        className={classes.tableCell}\n       >\n        {row.recordedAt}\n      </TableCell> \n      {/* <TableCell>{timeFromNow(row.lastLoginAt)}</TableCell> */}\n      <TableCell align=\"center\" onClick={event => event.stopPropagation()}\n         className={classes.tableCell}\n      >\n        <IconButton onClick={() => handleClick(row)}>\n          <LaunchIcon color='primary'/>\n        </IconButton>\n  {/* <CmtDropdownMenu items={userActions} onItemClick={(e) => onUserMenuClick(e)} TriggerComponent={<MoreHoriz />} /> */}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default React.memo(UserListRow);\n","import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst headCellsOrders = [\n  {\n    id: 'order_no',\n    numeric: false,\n    disablePadding: true,\n    label: 'ORDER #',\n  },\n  { id: 'amount_due', numeric: true, disablePadding: false, label: 'TOTAL' },\n  { id:   'recordedAt', numeric: true, disablePadding: false, label: 'DATE' },\n  //  {\n  //   id: 'lastLoginAt',\n  //   numeric: false,\n  //   disablePadding: false,\n  //   label: 'Last Login',\n  // },\n];\n\nconst headCellsExpenses = [\n  {\n    id: 'ref_no',\n    numeric: false,\n    disablePadding: true,\n    label: 'Ref #',\n  },\n  {\n    id: 'description',\n    numeric: false,\n    disablePadding: true,\n    label: 'Description',\n  },\n  { id: 'amount', numeric: false, disablePadding: true, label: 'TOTAL' },\n  { id:   'recordedAt', numeric: false, disablePadding: true, label: 'DATE' },\n];\n\n\n\nfunction UserTableHead({ classes, header, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort }) {\n  const [headerCells, setHeaderCells] = useState([]);\n \n  const onSortOrderChange = property => event => {\n    onRequestSort(event, property);\n  };\n\n\n  useEffect(() => {\n      if(header === 'expenses'){\n        setHeaderCells(headCellsExpenses)\n      } else {\n        setHeaderCells(headCellsOrders)\n      }\n  }, [header])\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell \n           className={classes.tableCell}\n        >\n          {/* <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          /> */}\n        </TableCell>\n        {headerCells.map(headCell => (\n          <TableCell\n          className={classes.tableCell}\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={onSortOrderChange(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell align=\"center\"\n         className={classes.tableCell}\n        ></TableCell> \n      </TableRow>\n    </TableHead>\n  );\n}\n\nUserTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default React.memo(UserTableHead);\n","import { alpha, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(2),\n    minHeight: 0,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: alpha(theme.palette.secondary.light, 0.15),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n  chipsRoot: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Chip, Menu, MenuItem } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { deleteBulkUsers } from '../../../../../redux/actions/Users';\nimport ConfirmDialog from '../../../../../@jumbo/components/Common/ConfirmDialog';\nimport CmtSearch from '../../../../../@coremat/CmtSearch';\nimport useStyles from './index.style';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { AddCircle } from '@material-ui/icons';\n\nconst filterOptionsList = [\n  { label: 'Active', value: 'active' },\n  { label: 'Suspended', value: 'suspended' },\n];\n\nconst UserTableToolbar = ({\n  selected,\n  setSelected,\n  onAdd,\n  filterOptions,\n  setFilterOptions,\n  searchTerm,\n  setSearchTerm,\n  project,\n  handleSearch\n}) => {\n  const classes = useStyles();\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n\n\n  const onDeleteCLick = () => {\n    setOpenConfirmDialog(true);\n  };\n\n  const handleConfirmDelete = () => {\n    setOpenConfirmDialog(false);\n    dispatch(deleteBulkUsers(selected, () => setSelected([])));\n  };\n\n  const handleCancelDelete = () => {\n    setOpenConfirmDialog(false);\n  };\n\n  // const onFilterOptionClick = option => {\n  //   setFilterOptions(prevState => {\n  //     if (prevState.includes(option.value)) {\n  //       return prevState.filter(item => item !== option.value);\n  //     } else {\n  //       return [...prevState, option.value];\n  //     }\n  //   });\n  // };\n\n  const onChipDelete = option => {\n    setFilterOptions(filterOptions.filter(item => item !== option.value));\n  };\n\n  const onSearchChipDelete = () => setSearchTerm('');\n\n  const numSelected = selected.length;\n\n\n  return (\n    <React.Fragment>\n      <Toolbar\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0,\n        })}>\n        {numSelected > 0 ? (\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                      {project.value === 'expenses' && \n            <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => onAdd()}>\n             <AddCircle/>&nbsp;Add\n            </Button>\n             }\n\n          <Box component=\"form\" onSubmit={handleSearch} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\" width=\"100%\">\n          <CmtSearch \n          onChange={e => setSearchTerm(e.target.value)}\n           value={searchTerm} border={false}  />\n          \n            </Box>\n          </Box>\n        )}\n\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\" onClick={onDeleteCLick}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <React.Fragment>\n                {/* <Box component=\"form\" onSubmit={handleSearch} style={{display: 'flex'}}>\n            <CmtSearch onChange={e => setSearchTerm(e.target.value)} value={searchTerm} border={false} onlyIcon />\n            <div className={classes.chipsRoot}>\n              {searchTerm && <Chip label={searchTerm} onDelete={onSearchChipDelete} />}\n              {filterOptionsList.map(\n                (option, index) =>\n                  filterOptions.includes(option.value) && (\n                    <Chip key={index} label={option.label} onDelete={() => onChipDelete(option)} />\n                  ),\n              )}\n            </div>\n            </Box> */}\n\n            {/* <Tooltip title=\"Filter list\">\n              <IconButton aria-label=\"filter list\" onClick={handleClick}>\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip> */}\n            {/* <Menu\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}>\n              {filterOptionsList.map((option, index) => (\n                <MenuItem key={index} onClick={() => onFilterOptionClick(option)}>\n                  <Checkbox\n                    checked={filterOptions.includes(option.value)}\n                    inputProps={{ 'aria-labelledby': option.label }}\n                  />\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Menu> */}\n          </React.Fragment>\n        )}\n      </Toolbar>\n\n      <ConfirmDialog\n        open={openConfirmDialog}\n        title={`Confirm delete users`}\n        content={'Are you sure, you want to  delete selected users?'}\n        onClose={handleCancelDelete}\n        onConfirm={handleConfirmDelete}\n      />\n    </React.Fragment>\n  );\n};\n\nUserTableToolbar.propTypes = {\n  selected: PropTypes.array,\n  setSelected: PropTypes.func,\n  filterOptions: PropTypes.array,\n  setFilterOptions: PropTypes.func,\n  searchTerm: PropTypes.string,\n  setSearchTerm: PropTypes.func,\n  onUserAdd: PropTypes.func,\n};\n\nexport default React.memo(UserTableToolbar);\n","import { lighten, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  tableCell: {\n    padding: 2,\n    fontSize: '15px',\n    fontWeight: 'bold'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(4),\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\n  },\n  container: {\n    // maxHeight: 415,\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport CmtImage from '../../../../@coremat/CmtImage';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n  },\n  emptyTitle: {\n    fontSize: 16,\n    color: theme.palette.text.disabled,\n    fontWeight: theme.typography.fontWeightBold,\n    [theme.breakpoints.up('lg')]: {\n      fontSize: 20,\n    },\n  },\n}));\n\nconst NoRecordFound = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box mb={{ xs: 4, lg: 6 }}>\n        <CmtImage src={'/images/icons/search-contact.png'} alt=\"Empty contacts\" />\n      </Box>\n      <p className={classes.emptyTitle}>{children}</p>\n    </Box>\n  );\n};\n\nexport default NoRecordFound;\n","import React, { useEffect, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Box from '@material-ui/core/Box';\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\nimport Grid from '@material-ui/core/Grid';\nimport AppTextInput from '../../../../../@jumbo/components/Common/formElements/AppTextInput';\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\nimport { useDropzone } from 'react-dropzone';\nimport Button from '@material-ui/core/Button';\nimport CmtList from '../../../../../@coremat/CmtList';\nimport IconButton from '@material-ui/core/IconButton';\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport { requiredMessage } from '../../../../../@jumbo/constants/ErrorMessages';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { DialogTitle, TextField, InputAdornment } from '@material-ui/core';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { isValidEmail } from '../../../../../@jumbo/utils/commonHelper';\n\n//Icons\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport commonData from 'utils/commonData';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\n//Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewUser, setCurrentUser, updateUser, uploadFile } from '../../../../../redux/actions/Users';\nimport { SET_USER_DIALOG, SET_STORE_DIALOG, SET_EXPENSE_DIALOG } from 'redux/actions/types';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  dialogRoot: {\n    position: 'relative',\n  },\n  dialogTitleRoot: {\n    '& .MuiTypography-h6': {\n      fontSize: 16,\n      color: theme.palette.common.dark,\n    },\n  },\n}));\n\n\nconst labels = [\n  { title: 'Home', slug: 'home' },\n  { title: 'Office', slug: 'office' },\n  { title: 'Other', slug: 'other' },\n];\n\nconst roles = [\n  { id: 3, name: 'sales' },\n  { id: 2, name: 'admin' },\n  { id: 1, name: 'super' },\n];\n\nconst AddEditUser = ({data}) => {\n  const classes = useStyles();\n  const { expenseDialog } = useSelector((state) => state.uiReducer);\n  const dispatch = useDispatch();\n  const [dpUrl, setDpUrl] = useState('');\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n\n  const handleChange = prop => e => {\n    setValues({ ...values, [prop]: e.target.value });\n    setErrors({ ...errors, [prop]: '' });\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      const formData = new FormData();\n      formData.append('file', acceptedFiles[0]);\n\n      dispatch(uploadFile(formData))\n        .then(a => {\n          setDpUrl(a.url);\n          setValues({...values, dpUrl: a.url})\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n  });\n\n\n  \n\n  const onCloseDialog = () => {\n    dispatch({type: SET_EXPENSE_DIALOG, payload: !expenseDialog});\n    dispatch(setCurrentUser(null));\n  };\n\n  const onClosesDialog = () => {\n    dispatch({type: SET_STORE_DIALOG, payload: false});\n    dispatch(setCurrentUser(null));\n  };\n\n\n\n  const onSubmitClick = () => {\n    const phoneNumbers = values.contacts.filter(item => item.number.trim());\n    if (!values.name) {\n      setErrors({ ...errors, name: requiredMessage });\n    } else if (!values.email) {\n      setErrors({ ...errors, email: requiredMessage });\n    } else if (!isValidEmail(values.email)) {\n      setErrors({ ...errors, email: 'Invalid Email Address' });\n    } \n    // else if (phoneNumbers.length === 0) {\n    //   setPhoneError(requiredMessage);\n    // } \n    else {\n      onUserSave(phoneNumbers);\n    }\n  };\n\n  const onUserSave = phoneNumbers => {\n \n  };\n\n  return (\n    <Dialog open={expenseDialog ? true : false} onClose={onClosesDialog} className={classes.dialogRoot}>\n      <DialogTitle className={classes.dialogTitleRoot}>{data.id ? 'Edit Details' : 'Create New Record'}</DialogTitle>\n      <DialogContent dividers>\n        <Box display=\"flex\" flexDirection={{ xs: 'column', md: 'row' }} alignItems=\"center\" mb={{ xs: 6, md: 5 }}>\n          <Box {...getRootProps()} mr={{ xs: 0, md: 5 }} mb={{ xs: 3, md: 0 }} className=\"pointer\">\n            <input {...getInputProps()} />\n            <CmtAvatar size={70} src={`${commonData.staticUrl}${dpUrl}`} />\n          </Box>\n          <GridContainer>\n            <Grid item xs={12} sm={12}>\n              <AppTextInput\n                fullWidth\n                variant=\"outlined\"\n                label=\"Full Name\"\n                value={values.name}\n                onChange={handleChange('name')}\n                helperText={errors.name}\n              />\n            </Grid>\n          </GridContainer>\n        </Box>\n        <Box mb={{ xs: 6, md: 5 }}>\n          <AppTextInput\n            fullWidth\n            variant=\"outlined\"\n            label=\"Complete Address\"\n            value={values.address}\n            onChange={handleChange('address')}\n            helperText={errors.address}\n          />\n        </Box>\n     \n        <Box display=\"flex\" justifyContent=\"flex-end\" mb={4}>\n          <Button onClick={onCloseDialog}>Cancel</Button>\n          <Box ml={2}>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmitClick}>\n              {data.id ? 'Void' : 'Save'}\n            </Button>\n          </Box>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AddEditUser;\n\n","import React, { useEffect, useState } from 'react';\nimport { Paper, Table, TableCell, TableContainer, TableRow } from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport UserListRow from './UserListRow';\nimport UserTableHead from './UserTableHead';\nimport UserTableToolbar from './UserTableToolbar';\nimport { getComparator, stableSort } from '../../../../@jumbo/utils/tableHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUser, getUsers, setCurrentUser } from '../../../../redux/actions/Users';\nimport ConfirmDialog from '../../../../@jumbo/components/Common/ConfirmDialog';\nimport { useDebounce } from '../../../../@jumbo/utils/commonHelper';\nimport useStyles from './index.style';\nimport NoRecordFound from './NoRecordFound';\nimport AddEdit from './AddEdit';\nimport { SET_EXPENSE_DIALOG, SET_USER_DIALOG } from 'redux/actions/types';\nimport { getOrders, setFilterType } from 'redux/actions/OrderApp';\n\nconst UsersModule = ({project, startDate, endDate}) => {\n  const classes = useStyles();\n  const { users } = useSelector((state) => state.usersReducer);\n  const { expenses } = useSelector(({dataReducer}) => dataReducer);\n  const { orders,  filterType, count } = useSelector(({orderApp}) => orderApp);\n  const [tableData, setTableData] = useState([]);\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [order, setOrder] = React.useState('asc');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [selected, setSelected] = React.useState([]);\n  const [current, setCurrent] = useState({});\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n  const [selectedUser, setSelectedUser] = useState({ name: '' });\n  const [usersFetched, setUsersFetched] = useState(false);\n  const [isFilterApplied, setFilterApplied] = useState(false);\n  const [filterOptions, setFilterOptions] = React.useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const dispatch = useDispatch();\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrderBy(property);\n    setOrder(isAsc ? 'desc' : 'asc');\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = users.map(n => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleRowClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n    dispatch(setFilterType({\n      ...filterType,\n      searchText: searchTerm,\n      page: newPage\n    }));\n    dispatch(getOrders({\n      ...filterType,\n      searchText: searchTerm,\n      page: newPage\n    }));\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n    dispatch(setFilterType({\n      ...filterType,\n      searchText: searchTerm,\n      page: 0,\n      rowsPerPage: parseInt(event.target.value, 10)\n    }));\n\n    dispatch(getOrders({\n      ...filterType,\n      searchText: searchTerm,\n      page: 0,\n      rowsPerPage: parseInt(event.target.value, 10)\n    }));\n\n  };\n\n  const handleUserView = user => {\n    dispatch(setCurrentUser(user));\n  };\n\n  const handleUserEdit = user => {\n    dispatch(setCurrentUser(user));\n    dispatch({type: SET_USER_DIALOG, payload: true})\n  };\n\n  const handleUserDelete = user => {\n    setSelectedUser(user);\n    setOpenConfirmDialog(true);\n  };\n\n  const handleConfirmDelete = () => {\n    setOpenConfirmDialog(false);\n    dispatch(deleteUser(selectedUser.id));\n  };\n\n  const handleCancelDelete = () => {\n    setOpenConfirmDialog(false);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n  \n\n  const handleSearchTerm = (e) => {\n    e.preventDefault();\n    dispatch(setFilterType({\n      ...filterType,\n      page: 0,\n      searchText: searchTerm\n    }));\n    dispatch(getOrders({\n      ...filterType,\n      page: 0,\n      searchText: searchTerm\n    }));\n\n  }\n\n\n  useEffect(() => {\n    dispatch(getOrders({\n      page: 0,\n      rowsPerPage: 10\n    }));\n  }, []);\n\n    useEffect(() => {\n      if(project.value === 'orders'){\n        setTableData(orders);\n      }\n\n      if(project.value === 'expenses'){\n        setTableData(expenses);\n      }\n    },[orders, project, expenses])\n\n\n\n  return (\n    <div className={classes.root}>\n      <AddEdit \n          data={current}\n      />\n      <Paper className={classes.paper}>\n        <UserTableToolbar\n          selected={selected}\n          setSelected={setSelected}\n          onAdd={(e) => \n            dispatch({type: SET_EXPENSE_DIALOG, payload: true})\n          }\n          filterOptions={filterOptions}\n          setFilterOptions={setFilterOptions}\n          searchTerm={searchTerm}\n          setSearchTerm={setSearchTerm}\n          project={project}\n          handleSearch={handleSearchTerm}\n        />\n        <TableContainer className={classes.container}>\n          <Table stickyHeader className={classes.table} aria-labelledby=\"tableTitle\" aria-label=\"sticky enhanced table\">\n            <UserTableHead\n              header={project.value}\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={tableData.length}\n            />\n            <TableBody>\n              {!!tableData.length ? (\n                stableSort(tableData, getComparator(order, orderBy))\n                  .map((row, index) => (\n                    <UserListRow\n                      key={index}\n                      row={row}\n                      onRowClick={handleRowClick}\n                      onUserEdit={handleUserEdit}\n                      onUserDelete={handleUserDelete}\n                      onUserView={handleUserView}\n                      isSelected={isSelected}\n                    />\n                  ))\n              ) : (\n                <TableRow style={{ height: 43 * 6 }}>\n                  <TableCell colSpan={7} rowSpan={10}>\n                    {isFilterApplied ? (\n                      <NoRecordFound>There are no records found with your filter.</NoRecordFound>\n                    ) : (\n                      <NoRecordFound>{usersFetched ? 'There are no records found.' : 'Loading users...'}</NoRecordFound>\n                    )}\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 20, 50]}\n          component=\"div\"\n          count={count}\n          rowsPerPage={rowsPerPage}\n          page={filterType.page}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleRowsPerPageChange}\n        />\n      </Paper>\n\n\n      <ConfirmDialog\n        open={openConfirmDialog}\n        title={`Confirm delete ${selectedUser.name}`}\n        content={'Are you sure, you want to  delete this user?'}\n        onClose={handleCancelDelete}\n        onConfirm={handleConfirmDelete}\n      />\n\n    </div>\n  );\n};\n\nexport default UsersModule;\n ","import React, { useState, useEffect } from 'react';\nimport CmtBackDrop from '../../../../@coremat/CmtBackDrop';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport Box from '@material-ui/core/Box';\nimport { classicWidget } from '../../../../@fake-db';\nimport AppDatePicker from '../../../../@jumbo/components/Common/formElements/AppDatePicker';\nimport ProjectWorkedGraph from './ProjectWorkedGraph';\nimport AppSelectBox from '../../../../@jumbo/components/Common/formElements/AppSelectBox';\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\nimport { getFormattedDate } from '../../../../@jumbo/utils/dateHelper';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\nimport GridContainer from '@jumbo/components/GridContainer';\nimport { Grid, Typography } from '@material-ui/core';\nimport PrintIcon from '@material-ui/icons/Print';\n\n//Components\nimport Table from '../Table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOrders, setFilterType} from 'redux/actions/OrderApp';\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles(theme => ({\n  headerItem: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 13,\n      paddingLeft: 8,\n      paddingRight: 8,\n    },\n    color: alpha(theme.palette.common.white, 0.74),\n    '&:not(:first-child)': {\n      borderLeft: `1px solid ${alpha(theme.palette.common.white, 0.8)}`,\n    },\n    '& .MuiSvgIcon-root': {\n      marginRight: 12,\n    },\n  },\n  backdropContent: {\n    color: alpha(theme.palette.common.white, 0.74),\n    '& .form-control': {\n      marginBottom: 20,\n      '& label, & .MuiInput-formControl, & .MuiSelect-icon, & .MuiIconButton-root': {\n        color: alpha(theme.palette.common.white, 0.74),\n      },\n      '& .MuiInput-underline:before, & .MuiInput-underline:after': {\n        borderBottomColor: alpha(theme.palette.common.white, 0.74),\n      },\n    },\n  },\n  subHeaderBottom: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n}));\n\nconst breadcrumbs = [\n  { label: 'Dashboard', link: '/' },\n  { label: 'Reports', link: '/reports' },\n];\n\n\nconst ProjectSwitcher = ({ currentProject, setCurrentProject, startDate, setStartDate, endDate, setEndDate }) => {\n  \n  \n  const handleProjectChange = event => {\n\n    setCurrentProject(classicWidget.projects.find(project => project.value === event.target.value));\n  };\n\n  const onStartDateChange = date => {\n    setStartDate(date);\n  };\n\n  const onEndDateChange = date => {\n    setEndDate(date);\n  };\n  const classes = useStyles();\n\n  \n  return (\n  \n    <CmtCardContent>\n      <Box className={classes.backdropContent}>\n        <AppSelectBox\n          label=\"Select Report Table\"\n          data={classicWidget.projects}\n          valueKey=\"value\"\n          labelKey=\"label\"\n          value={currentProject.value}\n          onChange={handleProjectChange}\n          // disabled={true}\n        />\n        <AppDatePicker label=\"Start Date\" value={startDate} onChange={setStartDate} />\n        <AppDatePicker label=\"End Date\" value={endDate} onChange={setEndDate} />\n      </Box>\n    </CmtCardContent>\n   \n  );\n};\n\nconst ProjectHeader = ({ revealed, startDate, endDate }) => {\n  const classes = useStyles();\n  return (\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\n      <Box className={classes.headerItem}>Reports</Box>\n      <Box className={classes.headerItem}>\n        <CalendarTodayIcon />\n        {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}\n      </Box>\n    </Box>\n  );\n};\n\nconst ProjectWorkedHours = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { orders,  filterType, count } = useSelector(({orderApp}) => orderApp);\n  const [currentProject, setCurrentProject] = React.useState(classicWidget.projects[0]);\n  const [startDate, setStartDate] = React.useState(moment().format('YYYY-MM-DD'));\n  const [endDate, setEndDate] = React.useState(moment().format('YYYY-MM-DD'));\n  const [revealed, setRevealed] = useState(false);\n  const [tableData, setTableData] = useState([]);\n\n  const handleOnRevealed = status => {\n    setRevealed(status);\n  };\n\n\n  const handleDateRange = prop => event => {\n    let start = startDate\n    let end = endDate\n\n    if(prop === 'startDate'){\n      start = moment(event).format('YYYY-MM-DD')\n      setStartDate(start)\n    } \n\n    if(prop === 'endDate'){\n      end = moment(event).format('YYYY-MM-DD')\n      setEndDate(end)\n    }\n\n    dispatch(setFilterType({\n      ...filterType,\n      page: 0,\n      startDate: start, \n      endDate: end\n    }));\n\n    dispatch(getOrders({\n      ...filterType,\n      startDate: start,\n      endDate: end\n    }))\n\n};\n  const handleProject = (e) => {\n    setCurrentProject(e)\n  }\n\n\n  const resetWidget = () => {\n    setCurrentProject(classicWidget.projects[0]);\n  };  \n\n  const handleReset = () => {\n    dispatch(getOrders({\n      page: 0,\n      rowsPerPage: 10\n    }))\n  };\n\n  // useEffect(() => {\n  //   if(startDate  && endDate) dispatch(getOrders({\n  //     ...filterType,\n  //     startDate: startDate,\n  //     endDate: endDate\n  //   }))\n  // }, [startDate, endDate])\n\n\n  return (\n    <PageContainer heading=\"Sales Reports\" breadcrumbs={breadcrumbs}>\n    <GridContainer>\n      <Grid item xs={12} sm={12} md={12} lg={12}>\n    <CmtBackDrop\n      concealedIcon={<DeveloperBoardIcon />}\n      extrasContainer={<Box >\n          <PrintIcon className=\"pointer\" \n      onClick={() => alert('PRINT')}/>&nbsp;&nbsp;&nbsp;\n      <RefreshIcon className=\"pointer\" \n      onClick={handleReset} />\n        </Box>}\n      backLayerConcealed={<ProjectHeader revealed currentProject={currentProject} startDate={startDate} endDate={endDate} />\n      }\n      backLayerRevealed={\n        <ProjectSwitcher\n          currentProject={currentProject}\n          setCurrentProject={handleProject}\n          startDate={startDate}\n          setStartDate={handleDateRange('startDate')}\n          endDate={endDate}\n          setEndDate={handleDateRange('endDate')}\n        />\n      }\n      onRevealed={handleOnRevealed}\n      subHeader={ <Box >\n      <Box>\n      <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n          {currentProject.label}\n        </Typography>\n    </Box>\n      <Box className={classes.subHeaderBottom}>\n        <Box>\n          {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}\n        </Box>\n\n        <Box component=\"span\" fontSize={14} color=\"primary.main\">\n          \n        </Box>\n      </Box> \n    </Box>}\n      >\n     \n      <Box width=\"100%\">\n      <Table\n        project={currentProject}\n        startDate={startDate}\n        endDate={endDate}\n      />\n      </Box>\n      {/* <ProjectWorkedGraph\n        data={currentProject.data}\n        color={currentProject.color}\n        backgroundColor={currentProject.backgroundColor}\n      /> */}\n    </CmtBackDrop>\n    </Grid>\n    </GridContainer>\n    </PageContainer>\n  );\n};\n\nexport default ProjectWorkedHours;\n"],"sourceRoot":""}